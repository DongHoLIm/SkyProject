<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Member">
	<resultMap type="com.kh.finalProject.member.model.vo.Member" id="memberResultSet">
		<id property="memberId" column="MEMBER_ID"/>
		<result property="memberPwd" column="MEMBER_PWD"/>
		<result property="memberKName" column="MEMBER_KNAME"/>
		<result property="memberEName" column="MEMBER_ENAME"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="phone" column="PHONE_ONE"/>
		<result property="email" column="EMAIL"/>
		<result property="address" column="ADDRESS"/>
		<result property="memberStatus" column="MEMBER_CHECK"/>
		<result property="loginCheck" column="LOGIN_CHECK"/>
	</resultMap>
	 <resultMap type="com.kh.finalProject.member.model.vo.Member" id="memberStuResultSet">
		<id property="memberId" column = "MEMBER_ID"/>
		<result property="memberPwd" column="MEMBER_PWD"/>
		<result property="memberKName" column="MEMBER_KNAME"/>
		<result property="memberEName" column="MEMBER_ENAME"/>
		<result property="phone" column="PHONE_ONE"/>
		<result property="email" column="EMAIL"/>
		<result property="address" column="ADDRESS"/>
		<result property="sdeptCode" column="SDEPT_NAME"/>
		<result property="memberStatus" column="STUDENT_STATUS"/>
		<result property="loginCheck" column="MEMBER_CHECK"/>		
	</resultMap>
	<resultMap type="com.kh.finalProject.member.model.vo.Member" id="memberProResultSet">
		<id property="memberId" column = "MEMBER_ID"/>
		<result property="memberPwd" column="MEMBER_PWD"/>
		<result property="memberKName" column="MEMBER_KNAME"/>
		<result property="memberEName" column="MEMBER_ENAME"/>
		<result property="phone" column="PHONE_ONE"/>
		<result property="email" column="EMAIL"/>
		<result property="address" column="ADDRESS"/>
		<result property="sdeptCode" column="SDEPT_NAME"/>
		<result property="loginCheck" column="MEMBER_CHECK"/>		
	</resultMap>
	<resultMap type="com.kh.finalProject.member.model.vo.Member" id="memberEmpResultSet">
		<id property="memberId" column = "MEMBER_ID"/>
		<result property="memberPwd" column="MEMBER_PWD"/>
		<result property="memberKName" column="MEMBER_KNAME"/>
		<result property="memberEName" column="MEMBER_ENAME"/>
		<result property="phone" column="PHONE_ONE"/>
		<result property="email" column="EMAIL"/>
		<result property="address" column="ADDRESS"/>
		<result property="sdeptCode" column="EDEPT_NAME"/>
		<result property="rankCode" column="RANK_NAME"/>
		<result property="loginCheck" column="MEMBER_CHECK"/>		
	</resultMap>	
	
	<!-- 로그인 체크  -->
	<select id="loginCheck" resultMap="memberResultSet" parameterType="Member">
		SELECT *
		FROM MEMBER 
		WHERE MEMBER_ID=#{memberId}
		AND MEMBER_PWD = #{memberPwd}
	</select>
	<update id="upDateLoginCheck" parameterType="Member">
		UPDATE MEMBER 
		SET LOGIN_CHECK='1' 
		WHERE MEMBER_ID=#{memberId}
	</update>
	<update id="upDateLooutCheck" parameterType="Member">
		UPDATE MEMBER 
		SET LOGIN_CHECK='0' 
		WHERE MEMBER_ID=#{memberId}
	</update>
	<insert id="insertMember" parameterType="Member">
		INSERT INTO MEMBER VALUES(
			#{memberId},#{memberPwd},#{memberKName},#{memberEName},#{memberNo},#{phone},#{email},#{address},#{loginCheck},#{memberStatus},NULL
		)	
	</insert>
	<insert id="insertStudentInfo" parameterType="Member">
		INSERT INTO STUDENT_INFO(STUDENT_NO,STUDENT_STATUS,SDEPT_CODE,GRADE,SECOND_MAJOR,AVG_SCORE,GRADUATED_DATE,DEGREE_NO,DEGREE_NAME,GRADUATED_NO,BANK,ACCOUNT_NO) VALUES(
		 #{memberId},'재학생', #{sdeptCode}, 1, DEFAULT, 0.0, NULL, NULL, NULL, NULL, #{bank}, #{bankNumber}
		)

	</insert>
	<insert id="insertProfessorInfo" parameterType="Member">
		INSERT INTO PROFESSOR VALUES(
			#{memberId},#{sdeptCode}
		)
	</insert>
	<insert id="insertEmployeeInfo" parameterType="Member">
		INSERT INTO EMPLOYEE VALUES(
			#{rankCode},#{memberId},#{sdeptCode}
		)		
	</insert>
	
	<insert id="insertEmployeeAccount" parameterType="Member">
		INSERT INTO AUTHORITY VALUES(
			'0','0','0','0','0','0',#{memberId}
		)
	</insert>
	<select id="memberFindId" resultMap="memberResultSet" parameterType="Member">
		SELECT * FROM
		MEMBER 
		WHERE MEMBER_NO LIKE '%'||#{memberNo}||'%'
		AND MEMBER_CHECK = #{memberStatus}
		AND MEMBER_KNAME = #{memberKName}
	</select>
	<select id ="memberFidPwd" resultMap="memberResultSet" parameterType="Member">
		SELECT * FROM
		MEMBER 
		WHERE MEMBER_ID =#{memberId}
		AND MEMBER_CHECK=#{memberStatus}	
	</select>
	<update id="memberchangeNewPassword" parameterType="Member">
		UPDATE MEMBER SET MEMBER_PWD=#{memberPwd}
		WHERE MEMBER_ID =#{memberId}
	</update>
	<select id="MemberAllList" resultMap="memberResultSet">
		SELECT *FROM 
		MEMBER
		WHERE MEMBER_ID != #{memberId}
		ORDER BY MEMBER_CHECK DESC
	</select>
	<select id="MemberListCount" resultType="_int">
		SELECT COUNT(MEMBER_ID)
		FROM 
		MEMBER
		WHERE MEMBER_ID != #{memberId}
	</select>
	
	<select id="memberOneSelect" resultMap="memberResultSet" parameterType="Member">
		SELECT * FROM 
		MEMBER 
		WHERE MEMBER_ID=#{memberId}
	</select>
	  
	<select id="memberDetailStu" resultMap="memberStuResultSet" parameterType="Member">
		SELECT M.MEMBER_ID,M.MEMBER_PWD,M.MEMBER_KNAME,M.MEMBER_ENAME,M.PHONE_ONE,M.EMAIL,M.ADDRESS,SI.STUDENT_STATUS,SP.SDEPT_NAME
		FROM MEMBER M
		JOIN STUDENT_INFO SI ON(M.MEMBER_ID=SI.STUDENT_NO) 
		JOIN SDEPARTMENT SP ON(SI.SDEPT_CODE = SP.SDEPT_CODE)
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<select id="memberDetailPro" resultMap="memberProResultSet" parameterType="Member">
		SELECT  M.MEMBER_ID,M.MEMBER_PWD,M.MEMBER_KNAME,M.MEMBER_ENAME,M.PHONE_ONE,M.EMAIL,M.ADDRESS,M.MEMBER_CHECK,SP.SDEPT_NAME
		FROM MEMBER M 
		JOIN PROFESSOR P ON (M.MEMBER_ID=P.PROFESSOR_NO)
		JOIN SDEPARTMENT SP ON(P.PDEPT_CODE=SP.SDEPT_CODE)
		WHERE M.MEMBER_ID=#{memberId}
	</select>
	
	<select id="memberDetailEmp" resultMap="memberEmpResultSet" parameterType="Member">
		SELECT M.MEMBER_ID,M.MEMBER_PWD,M.MEMBER_KNAME,M.MEMBER_ENAME,M.PHONE_ONE,M.EMAIL,M.ADDRESS,M.MEMBER_CHECK,R.RANK_NAME,ED.EDEPT_NAME
		FROM MEMBER M 
		JOIN EMPLOYEE E ON(M.MEMBER_ID = E.EMPLOYEE_NO)
		JOIN RANK R ON(E.RANK_CODE = R.RANK_CODE)
		JOIN E_DEPARTMENT ED ON (E.EDEPT_CODE = ED.EDEPT_CODE)
		WHERE M.MEMBER_ID=#{memberId}
	</select> 
	
	<update id="memberUpdate" parameterType="Member">
		UPDATE MEMBER SET EMAIL=#{email},PHONE_ONE=#{phone},MEMBER_KNAME=#{memberKName},MEMBER_ENAME=#{memberEName},ADDRESS = #{address}
		WHERE MEMBER_ID = #{memberId}
	</update>
	
	<update id="employeeUpdate" parameterType="Member">
		UPDATE EMPLOYEE SET RANK_CODE = #{rankCode}
		WHERE EMPLOYEE_NO=#{memberId}
	</update>
	
	<select id="employeelist" resultMap="memberEmpResultSet" >
		SELECT M.MEMBER_ID,M.MEMBER_KNAME,ED.EDEPT_NAME,R.RANK_NAME
		FROM MEMBER M 
		LEFT JOIN EMPLOYEE E ON(M.MEMBER_ID=E.EMPLOYEE_NO)
		JOIN E_DEPARTMENT ED ON(E.EDEPT_CODE = ED.EDEPT_CODE)
		JOIN RANK R ON(E.RANK_CODE = R.RANK_CODE)
		WHERE MEMBER_ID!='emp'
		AND M.MEMBER_CHECK = '3'
	</select>
	
	<select id="employeeDetailList" resultMap="memberEmpResultSet" parameterType="Member">
		SELECT M.MEMBER_ID,M.MEMBER_KNAME,ED.EDEPT_NAME,R.RANK_NAME
		FROM MEMBER M 
		LEFT JOIN EMPLOYEE E ON(M.MEMBER_ID=E.EMPLOYEE_NO)
		JOIN E_DEPARTMENT ED ON(E.EDEPT_CODE = ED.EDEPT_CODE)
		JOIN RANK R ON(E.RANK_CODE = R.RANK_CODE)
		WHERE MEMBER_ID = #{memberId}
		AND M.MEMBER_CHECK = '3'
	
	 </select>
</mapper>