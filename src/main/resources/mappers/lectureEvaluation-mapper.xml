<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="LectureEvaluation">
	<resultMap type="com.kh.finalProject.lectureEvaluation.model.vo.LectureEvaluation" id="lectureEvaluationResultSet">
		<id property="lectureNo" column="LECTURE_NO"/>
		<result property="doneCode" column="DONE_CODE"/>
		<result property="allCount" column="ALL_COUNT"/>
		<result property="memberCount" column="MEMBER_COUNT"/>
		<result property="doneStatus" column="DONE_STATUS"/>
		<result property="openStatus" column="OPEN_STATUS"/>
		<result property="evalCode" column="EVAL_CODE"/>
		<result property="subName" column="SUB_NAME"/>
		<result property="pdeptName" column="PDEPT_NAME"/>
		<result property="professorName" column="PROFESSOR_NAME"/>
		<result property="answer1" column="ANSWER1"/>
		<result property="answer2" column="ANSWER2"/>
		<result property="answer3" column="ANSWER3"/>
		<result property="answer4" column="ANSWER4"/>
		<result property="answer5" column="ANSWER5"/>
		<result property="totalCount" column="TOTAL_COUNT"/>
		<result property="avgCount" column="AVG_COUNT"/>
		<result property="openSubCode" column="OPENSUB_CODE"/>
	</resultMap>
	
	
	<select id="LectureEvalOpenListCount" resultType="_int">
		SELECT COUNT(DISTINCT(E.LECTURE_NO))   
		FROM EVAL_MANAGEMENT E
		JOIN OPEN_SUBJECT O ON(E.OPENSUB_CODE = O.OPENSUB_CODE)
		JOIN SUBJECT U ON(E.OPENSUB_CODE = U.SUB_CODE)
		JOIN MEMBER M ON(O.PROFESSOR_NO = M.MEMBER_ID)
		JOIN SUBJECT_APPLY S ON(O.OPENSUB_CODE = S.OPENSUB_CODE)
		JOIN PROFESSOR P ON(O.PROFESSOR_NO = P.PROFESSOR_NO)
		JOIN SDEPARTMENT A ON(P.PDEPT_CODE = A.SDEPT_CODE)
		WHERE OPEN_STATUS = 'N'
	</select>
	
	<select id="LectureEvalOpenList" resultMap="lectureEvaluationResultSet">
		SELECT O.OPENSUB_CODE,E.LECTURE_NO, U.SUB_NAME, 
		       COUNT(O.OPENSUB_CODE) AS ALL_COUNT,
		       A.SDEPT_NAME AS PDEPT_NAME,
		       M.MEMBER_KNAME AS PROFESSOR_NAME
		FROM EVAL_MANAGEMENT E
		JOIN OPEN_SUBJECT O ON(E.OPENSUB_CODE = O.OPENSUB_CODE)
		JOIN SUBJECT U ON(E.OPENSUB_CODE = U.SUB_CODE)
		JOIN MEMBER M ON(O.PROFESSOR_NO = M.MEMBER_ID)
		JOIN SUBJECT_APPLY S ON(O.OPENSUB_CODE = S.OPENSUB_CODE)
		JOIN PROFESSOR P ON(O.PROFESSOR_NO = P.PROFESSOR_NO)
		JOIN SDEPARTMENT A ON(P.PDEPT_CODE = A.SDEPT_CODE)
		WHERE OPEN_STATUS = 'N'
		GROUP BY O.OPENSUB_CODE, E.LECTURE_NO, U.SUB_NAME, A.SDEPT_NAME, M.MEMBER_KNAME
		ORDER BY E.LECTURE_NO
	</select>	
	
	<update id="LectureEvaluationOpen">
		UPDATE EVAL_MANAGEMENT
		SET ALL_COUNT = #{allCount}, OPEN_STATUS = 'Y'
		WHERE LECTURE_NO = #{lectureNo}
	</update>
	
	<select id="LectureEvalOpenListCount2" resultType="_int">
		SELECT COUNT(DISTINCT(E.LECTURE_NO))   
		FROM EVAL_MANAGEMENT E
		JOIN OPEN_SUBJECT O ON(E.OPENSUB_CODE = O.OPENSUB_CODE)
		JOIN SUBJECT U ON(E.OPENSUB_CODE = U.SUB_CODE)
		JOIN MEMBER M ON(O.PROFESSOR_NO = M.MEMBER_ID)
		JOIN SUBJECT_APPLY S ON(O.OPENSUB_CODE = S.OPENSUB_CODE)
		JOIN PROFESSOR P ON(O.PROFESSOR_NO = P.PROFESSOR_NO)
		JOIN SDEPARTMENT A ON(P.PDEPT_CODE = A.SDEPT_CODE)
		WHERE OPEN_STATUS = 'Y'
	</select>
	
	<select id="LectureEvalOpenList2" resultMap="lectureEvaluationResultSet">
		SELECT E.LECTURE_NO, U.SUB_NAME, 
		       COUNT(O.OPENSUB_CODE) AS ALL_COUNT,
		       E.MEMBER_COUNT,
		       M.MEMBER_KNAME AS PROFESSOR_NAME,
		       E.DONE_STATUS
		FROM EVAL_MANAGEMENT E
		JOIN OPEN_SUBJECT O ON(E.OPENSUB_CODE = O.OPENSUB_CODE)
		JOIN SUBJECT U ON(E.OPENSUB_CODE = U.SUB_CODE)
		JOIN MEMBER M ON(O.PROFESSOR_NO = M.MEMBER_ID)
		JOIN SUBJECT_APPLY S ON(O.OPENSUB_CODE = S.OPENSUB_CODE)
		JOIN PROFESSOR P ON(O.PROFESSOR_NO = P.PROFESSOR_NO)
		JOIN SDEPARTMENT A ON(P.PDEPT_CODE = A.SDEPT_CODE)
		WHERE OPEN_STATUS = 'Y'
		GROUP BY O.OPENSUB_CODE, E.LECTURE_NO, U.SUB_NAME, E.MEMBER_COUNT, E.DONE_STATUS, M.MEMBER_KNAME
		ORDER BY E.LECTURE_NO
	</select>
	
	<update id="LectureEvaluationClose">
		UPDATE EVAL_MANAGEMENT
		SET DONE_STATUS = 'Y'
		WHERE LECTURE_NO = #{lectureNo}
	</update>
	
	
	
	<select id="st_LectureEvaluationListCount" resultType="_int" parameterType="java.lang.String">
		SELECT COUNT(*)
		FROM EVAL_MANAGEMENT E
		JOIN SUBJECT_APPLY S ON(E.OPENSUB_CODE = S.OPENSUB_CODE)
		JOIN OPEN_SUBJECT O ON(E.OPENSUB_CODE = O.OPENSUB_CODE)
		JOIN SUBJECT J ON(E.OPENSUB_CODE = J.SUB_CODE)
		JOIN MEMBER M ON(O.PROFESSOR_NO = M.MEMBER_ID)
		WHERE S.STUDENT_NO = #{studentNo} AND S.DONE_TYPE = '완료' AND E.OPEN_STATUS = 'Y'
		ORDER BY E.LECTURE_NO
	</select>
	
	<select id="st_LectureEvaluationList" resultMap="lectureEvaluationResultSet" parameterType="java.lang.String">
		SELECT E.LECTURE_NO, J.SUB_NAME, M.MEMBER_KNAME AS PROFESSOR_NAME
		FROM EVAL_MANAGEMENT E
		JOIN SUBJECT_APPLY S ON(E.OPENSUB_CODE = S.OPENSUB_CODE)
		JOIN OPEN_SUBJECT O ON(E.OPENSUB_CODE = O.OPENSUB_CODE)
		JOIN SUBJECT J ON(E.OPENSUB_CODE = J.SUB_CODE)
		JOIN MEMBER M ON(O.PROFESSOR_NO = M.MEMBER_ID)
		WHERE S.STUDENT_NO = #{studentNo} AND S.DONE_TYPE = '완료' AND E.OPEN_STATUS = 'Y'
		ORDER BY E.LECTURE_NO
	</select>
	
	
</mapper>